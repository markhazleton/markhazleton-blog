extends layouts/layout

block pagehead
  title Mark Hazleton - Chat GPT for C# Developers
  meta(name='description', content='Mark Hazleton - Chat GPT for C# Developers')
  meta(name='author', content='Mark Hazleton')
  link(rel='canonical', href='https://markhazleton.controlorigins.com/using-chatgpt-for-developers.html')

block layout-content

  section.resume-section#about
    .resume-section-content
      h1.mb-0 Chat GPT for C# Developers:
      .subheading.mb-3 Writing C# Code with Chat GPT
      p.
        I have another post on creating a Trivia Application using Chat GPT.
        It is an ongoing story on how I use Chat GPT to accelerate the development of an ASP.Net C# web based trvia application.
        <a href="/trivia-spark-development.html" target="_self">Trivia Spark:Igniting Creativity With Chat GPT</a>

      h2.mb-0 What is Chat GPT
      p.
        Chat GPT (short for Chat Generative Pre-trained Transformer) is a natural language processing (NLP) model
        developed by <a href="https://openai.com" target="_blank">OpenAI</a>. OpenAI is an artificial
        intelligence (AI) research laboratory. It is designed to be able to generate human-like responses to text
        input, and has been trained on a large dataset of text in order to learn the patterns and nuances of human language.
      p.
        The language model can answer questions, and assist you with tasks such as composing emails, essays, and code.
        Usage is currently open to public free of charge because ChatGPT is in its research and feedback-collection phase.
      p.
        While some of the underlying technology behind Chat GPT is open source, the specific model and its trained parameters
        are likely proprietary to OpenAI.  Currently Chat GPT is only available as a cloud-based service, and is not
        available for installation on an internal network.
      p.
        Chat GPT learns through a process called training, where it is fed a large dataset of text and uses this data
        to learn patterns and relationships in language. It then uses this knowledge to generate responses to new text input.
      p.
        For more information on Chat GPT, see the <a href="https://openai.com/blog/chatting-with-ai/" target="_blank">OpenAI Blog</a>.
        or just watch the video below.

      <iframe width="560" height="315" src="https://www.youtube.com/embed/JTxsNm9IdYU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

      h2.mb-1  Chat GPT for C# Developers
      p.
        There has been much chatter about the new Artificial Intellegince tool and how it will impact teachers, artists, writers, and
        web search.  For this post, I wanted to look at the tool from a developer perspective.
      p.
        Chat GPT can be used to improve developer productivity.
        It can be used to answer technical questions and provide information about the development process.
      p.
        Not every response from Chat GPT is correct or even runnable.  It does howeever provied another tool for the developer
        to use to improve thier productivity.  Along with tool like GitHub Co-Pilot and Stack Overflow, developers are now
        to be more productive.
      dl
        dt.col-sm-12.h3 Explaining existing code blocks
        dd.col-sm-12
          p.
            One of the most helpful ways I've used ChatGPT is to ask it to explain code that I don't fully understand.
            This can be especially useful when working with code written by someone else, or when dealing with code
            that is particularly convoluted. Here's an example of how ChatGPT can explain some C# code:
          pre.code
            code.
              Input:
              Can you explain this C# code to me?
              public class MyClass
              {
                public int Property { get; set; }
              }
              Output:
              This code defines a class called "MyClass" with a single property called "Property".
              The property is of type "int" and is publicly accessible using the "get" and "set" accessors.

        dt.col-sm-12.h3 Improve existing code
        dd.col-sm-12
          p.
            Another useful feature of ChatGPT is its ability to help you improve existing code.
            Simply describe what you want to accomplish, and ChatGPT will provide you with instructions on
            how to do it, including the modified code. For example:

          include modules/improve-exising-code.html

          p.
            This refactored version includes:
          ul
            li Braces around all of the code blocks to make the structure of the code more explicit
            li Variable names that are more descriptive of their purpose
            li White space to separate logical blocks of code
          p.
            The refactored version is more readable and maintainable for future developers.


        dt.col-sm-12.h3 Rewriting code for style
        dd.col-sm-12
          p.
            It can be frustrating to work with code that doesn't follow the usual conventions and standards.
            It can be especially challenging when the code was written by a junior C# developer who may be unfamiliar
            with the best practices and conventions of the language.
          p.
            Fortunately, ChatGPT can help you rewrite code to follow the correct style and conventions.
            Simply describe what you want to accomplish and ChatGPT will provide you with the updated code,
            along with explanations for the changes it made.
          p.
            Here's an example of how ChatGPT can help you rewrite code to follow the correct style:
          pre.code
            code.
              Input:
              Can you help me rewrite this code to follow C# naming conventions?
              // This code defines a class with an improperly named property and method
              public class MyClass
              {
                public int Prop { get; set; }
                public void Do_Something()
                {
                  // Method body
                }
              }

              Output:
              // This code defines a class with a properly named property and method
              public class MyClass
              {
                public int Prop { get; set; }

                public void DoSomething()
                {
                  // Method body
                }
              }
          p.
            As you can see, ChatGPT correctly renamed the Prop property to follow the camelCase naming convention
            and renamed the Do_Something method to remove the underscore and use PascalCase instead.
          p.
            By using ChatGPT to rewrite code to follow the correct style, you can save time and effort and improve
            the readability and maintainability of your code.

        dt.col-sm-12.h3 Rewriting code with idiomatic constructs
        dd.col-sm-12
          p.
            ChatGPT can be particularly helpful when reviewing and refactoring code written
            by inexperienced C# developers. One of the challenges of working with existing code is
            that it may not always follow the best practices and conventions of the language.
            This can make the code more difficult to read and maintain, and it can take more time
            and effort to review and refactor it.
          p.
            You can use ChatGPT to rewrite code using idiomatic constructs to ensure that your code follows
            the best practices and conventions of C#, making it more readable and maintainable.
          p.
            Here's an example of how ChatGPT can help you rewrite code using idiomatic constructs:

          pre.code
            code.
              Input:
              Can you help me rewrite this code to use C# idiomatic constructs?

              // This code defines a function that uses a non-idiomatic loop to sum the elements of an array
              public int SumArray(int[] array)
              {
                int sum = 0;
                for (int i = 0; i < array.Length; i++)
                {
                  sum += array[i];
                }
                return sum;
              }

              Output:
              // This code defines a function that uses an idiomatic loop to sum the elements of an array
              public int SumArray(int[] array)
              {
                int sum = 0;
                foreach (int element in array)
                {
                  sum += element;
                }
                return sum;
              }
          p.
            In this example, ChatGPT changed the loop from a traditional for loop to a foreach loop,
            which is more idiomatic in C#. This not only makes the code more readable, but it also makes
            it more concise and easier to understand.
          p.
            By using ChatGPT to rewrite code using idiomatic constructs, you can ensure that your code
            follows best practices and is easier to read and maintain. This can save you hours of work
            every day, and it can help you stay competitive with other developers who are using AI
            effectively to improve their efficiency.

        dt.col-sm-12.h3 Simplifying existing code
        dd.col-sm-12
          p.
            ChatGPT can be used to simplify C# code is by suggesting alternative implementations that are more efficient or easier to understand.
            You could prompt ChatGPT with the following:

          include modules/simplifying-existing-code.html

          p.
            In this way ChatGPT can help you to improve the efficiency and readability of your code.

        dt.col-sm-12.h3 Writing test cases
        dd.col-sm-12
          p.
            ChatGPT can be used to generate test cases for C# code. For example, suppose you want to generate
            a test case for a C# method that calculates the average of a list of integers. You could prompt
            ChatGPT with the following:

          include modules/writing-test-cases.html

        dt.col-sm-12.h3 Writing documentation
        dd.col-sm-12
          p.
            ChatGPT can be used to generate documentation for existing C# code by
            prompting it with descriptions of the code and its intended behavior.

          include modules/writing-documentation.html

          p.
            This documentation uses C#'s XML documentation comments to provide a
            summary of the method's behavior and describe its input and output parameters.

        dt.col-sm-12.h3 Scaffolding code
        dd.col-sm-12
          p.
            Scaffolding is the process of generating basic code structures or templates that can be customized
            and built upon by a developer. ChatGPT can be used for scaffolding code to speed up development by
            generating code snippets or templates based on a developer's prompts.
          p.
            For example, suppose you are building a C# application that needs to make HTTP requests to a REST API.
            You could use ChatGPT to generate the basic structure of a class that handles the HTTP requests,
            as well as methods for making common types of requests such as GET, POST, PUT, and DELETE.
          p.
            You give the prompt: "Write a C# class that can be used to make HTTP requests to a REST API. The class should
              include methods for making GET and POST requests." and get the folowing output:

          include modules/scafolding-code.html

          p.
            The generated code is concise and easy to understand, and it would likely take a C# developer
            much longer to write it manually.
            By no means is the code done, but it is ready to start refactoring and customizing to fit your needs.
            This can save you hours of work every day, and it can help you stay competitive with other developers
            who are using AI effectively to improve their efficiency.

          p.
            Here is another prompt to Chat GPT:
          p.
            "as a c# developer write a method to make 1000 REST calls but no more than 10 concurrent requests at a time.
            Use SemaphoreSlim to limit the number of concurrent requests.
            Use Task.WhenAll to log a message when all calls are complete"  and the output is:

          include modules/generate-code.pug

