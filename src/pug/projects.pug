extends layouts/modern-layout.pug

block variables
  - var pageTitle = 'Projects Portfolio | Mark Hazleton';
  - var pageDescription = 'Explore Mark Hazleton\'s curated portfolio of applications, experiments, and learning accelerators built across .NET, Azure, and modern web stacks.';
  - var pageCanonical = 'https://markhazleton.com/projects.html';
  - var pageKeywords = 'Mark Hazleton projects, portfolio, WebSpark, Frogsfolly, Azure, .NET, AI solutions';

block layout-content
  section.bg-primary.text-white.py-5
    .container
      .row.align-items-center
        .col-lg-8
          br
          h1.display-4.fw-bold.mb-3 Projects & Experiments
          p.lead.mb-4 Explore production launches, lab experiments, and platform accelerators that demonstrate practical engineering patterns and modern AI-assisted solutions.
        .col-lg-4.text-center
          i.fas.fa-project-diagram.display-1.mb-3.opacity-75

  section.py-5
    .container
      // Simple search and filter
      .row.mb-4
        .col-md-6
          .input-group
            input#searchInput.form-control(type='text', placeholder='Search projects...', oninput='filterProjects()')
            button.btn.btn-outline-secondary(type='button', onclick='clearSearch()')
              i.fas.fa-times
        .col-md-6
          select#pipelineFilter.form-select(onchange='filterProjects()')
            option(value='') All Categories

      .row.mb-3
        .col-12
          .alert.alert-info.d-flex.align-items-center
            i.fas.fa-info-circle.me-2
            span#projectStats Loading projects...

      // Projects grid - render statically from build data
      .row.g-4#projectsGrid
        each project in projects
          .col-md-6.col-lg-4.project-card-container(style='display: block;')
            .card.h-100.shadow-sm.hover-card.project-card(data-pipeline=project.promotion && project.promotion.pipeline ? project.promotion.pipeline : 'Portfolio')
              if project.image
                img.card-img-top(src='/' + project.image.replace(/^\//, ''), alt=project.p, onerror="this.src='https://via.placeholder.com/600x340?text=' + encodeURIComponent(this.alt)")
              else
                img.card-img-top(src=`https://via.placeholder.com/600x340?text=${encodeURIComponent(project.p)}`, alt=project.p)

              .card-body.d-flex.flex-column
                .mb-2.d-flex.justify-content-between.align-items-center
                  span.badge.bg-secondary= project.promotion && project.promotion.pipeline ? project.promotion.pipeline : 'Portfolio'
                  small.text-muted
                    - var dateSource = (project.promotion && project.promotion.lastPromotedOn) || project.lastModified || project.updatedOn;
                    - if (dateSource) {
                    -   var formattedDate = new Date(dateSource).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
                    - }
                    = formattedDate || ''

                h5.card-title= project.p
                p.card-text.text-muted.small.flex-grow-1
                  - var summary = project.summary || project.d || '';
                  - var truncated = summary.length > 110 ? summary.substring(0, 110).trim() + '...' : summary;
                  = truncated

                .mt-3.d-grid.gap-2
                  a.btn.btn-outline-primary.btn-sm(href=`/projects/${project.slug}/`)
                    i.fas.fa-info-circle.me-2
                    | Project Overview
                  if project.h
                    a.btn.btn-primary.btn-sm(href=project.h, target='_blank', rel='noopener')
                      i.fas.fa-external-link-alt.me-2
                      | Open Experience

  script.
    // Simple client-side filtering - no complex template literals
    function filterProjects() {
      var searchTerm = document.getElementById('searchInput').value.toLowerCase();
      var selectedPipeline = document.getElementById('pipelineFilter').value;
      var projectCards = document.querySelectorAll('.project-card');
      var visibleCount = 0;

      projectCards.forEach(function(card) {
        var title = card.querySelector('.card-title').textContent.toLowerCase();
        var description = card.querySelector('.card-text').textContent.toLowerCase();
        var pipeline = card.dataset.pipeline || '';

        var matchesSearch = !searchTerm || title.indexOf(searchTerm) !== -1 || description.indexOf(searchTerm) !== -1;
        var matchesPipeline = !selectedPipeline || pipeline === selectedPipeline;

        var container = card.closest('.project-card-container');
        if (matchesSearch && matchesPipeline) {
          container.style.display = 'block';
          visibleCount++;
        } else {
          container.style.display = 'none';
        }
      });

      updateResultsCount(visibleCount, projectCards.length);
    }

    function clearSearch() {
      document.getElementById('searchInput').value = '';
      filterProjects();
    }

    function updateResultsCount(visible, total) {
      var statsElement = document.getElementById('projectStats');
      var searchTerm = document.getElementById('searchInput').value.trim();
      var pipeline = document.getElementById('pipelineFilter').value;

      var message = 'Showing ' + visible + ' of ' + total + ' projects';

      if (searchTerm || pipeline) {
        var filters = [];
        if (searchTerm) filters.push('matching "' + searchTerm + '"');
        if (pipeline) filters.push('in ' + pipeline);
        message += ' (' + filters.join(' and ') + ')';
      }

      statsElement.textContent = message + '.';
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
      // Populate pipeline filter
      var pipelines = [];
      var seen = {};

      document.querySelectorAll('.project-card').forEach(function(card) {
        var pipeline = card.dataset.pipeline;
        if (pipeline && !seen[pipeline]) {
          pipelines.push(pipeline);
          seen[pipeline] = true;
        }
      });

      pipelines.sort();

      var select = document.getElementById('pipelineFilter');
      pipelines.forEach(function(pipeline) {
        var option = document.createElement('option');
        option.value = pipeline;
        option.textContent = pipeline;
        select.appendChild(option);
      });

      // Initial count
      updateResultsCount(document.querySelectorAll('.project-card').length, document.querySelectorAll('.project-card').length);
    });
