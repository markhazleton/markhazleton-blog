mixin renderAccordion(links)
  - let groupedLinks = {}
  each link in links
    - if (groupedLinks[link.Section])
      - groupedLinks[link.Section].push(link)
    - else
      - groupedLinks[link.Section] = [link]

  #accordionArticles.accordion
    each sectionKey in Object.keys(groupedLinks)
      - const section = sectionKey
      - const links = groupedLinks[sectionKey]
      - links.sort((a, b) => a.name.localeCompare(b.name))

      //- Dynamic IDs with spaces removed
      - const sectionCollapseId = `${section.replace(/\s+/g, '_')}Collapse`
      - const sectionHeadingId = `${section.replace(/\s+/g, '_')}Heading`

      .accordion-item
        strong.accordion-header
          button.accordion-button(type='button' data-bs-toggle='collapse' data-bs-target=`#${sectionCollapseId}` aria-expanded='false' aria-controls=`${sectionCollapseId}`)= section
        div(id=`${sectionCollapseId}` class='accordion-collapse collapse' aria-labelledby=`${sectionHeadingId}`)
          .accordion-body
            ul.list-group
              each link in links
                li.list-group-item.flex-fill
                  a(href=`${link.slug}` target='_self' title=`${link.description}`) #{link.name}


+renderAccordion(articles)
