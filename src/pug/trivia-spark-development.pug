extends layouts/articles

block pagehead
  title Mark Hazleton - Igniting Creativity with ChatGPT
  meta(name='description', content='Mark Hazleton - Trivia Spark: Igniting Creativity with ChatGPT')
  meta(name='author', content='Mark Hazleton')
  link(rel='canonical', href='https://markhazleton.controlorigins.com/trivia-spark-development.html')

block layout-content

  section#post.painteddesert-section.painteddesert-section-background
    .painteddesert-section-content
      h1.mb-0 Trivia Spark:
      .subheading.mb-3 Igniting Creativity with ChatGPT
      p.lead.
        Welcome to the kickoff of the Trivia Spark application!
        Trivia Spark is my experiment in using ChatGPT to help me develop a trivia application.
        My goal here is to document the collaboration with ChatGPT as the project develops.
        I will be updating this page as the project progresses.
      p.
        You can follow along with the project on GitHub.
      ul
        li <a href="https://github.com/controlorigins/triviaspark">Trivia Spark GitHub Repositroy</a>
        li <a href="https://triviaspark.controlorigins.com/">(AWS VM) Trivia Spark Website </a>
        li <a href="https://triviasparkweb.azurewebsites.net/">(Azure AppService) Trivia Spark Website</a>
        li <a href="https://markhazleton.controlorigins.com/using-chatgpt-for-developers.html">Article - Using ChatGPT for devlopers</a>

      img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-TriviaSparkMatch.png' alt='Trivia Spark Early Screenshot')

      dl
        dt  Collaboration with ChatGPT (a.k.a. Chat)
        dd
          p.
            The Trivia Spark application came about when I was working with open public APIs.
            I found the Open Trivia database API and saw that it had an easy-to-use endpoint to get trivia questions.
            I wanted to see how using the Open Trivia Db as a starting point, I could use Chat to help quickly build
            an application to present trivia questions and show the result.
          p.
            Chat was able to provide suggestions and ideas for different approaches to
            take when I got stuck on a particular problem. I would explain the issue by asking leading questions, and then
            Chat would provide suggestions on how to resolve them.  Many times Chat would provide a code snippet.
          p.
            Chat was also able to help me speed up development by creating code snippets that I could use in the project.
            This allowed me to spend less time on repetitive tasks and more time on more complex parts of the project.
          p.
            One of the most significant benefits of collaborating with Chat was the ability to quickly
            prototype different ideas. I would come up with a concept and Chat would provide feedback
            and help iterate on it until I had a working code.

        dt Chat As Trusted Advisor
        dd
          p.
            In the development of Trivia Spark, Chat and I were able to work together to create a
            successful prototype in a short amount of time. One example of a discussion was
            around the concept of Match Mode and how to implement it in a flexible and maintainable way.
          p.
            At the start of the project, I was unsure about how to handle the different modes of play in the
            Trivia Spark game. Chat suggested using an enum and a dictionary to map the enum values to different
            implementations of the IMatchService interface. I was able to quickly implement this approach and it
            provided a great foundation for the project moving forward.
          p.
            In looking at the Match Mode (type of play) I was trying to figure out how to best handle the creation and management
            of a Match Model instance. Chat suggested using a lazy loading approach with error checking to ensure
            that the model was properly initialized before use.
          p.
            Throughout the development process, we were able to quickly iterate on different approaches to tackle
            various challenges. Chat's expertise in software development and ability to provide clear and concise solutions
            proved invaluable to the project's success.
          p.
            Overall, the collaboration highlights the benefits of working with experts in the field
            to accelerate development and create successful software projects.  Unlike other developers,
            I have collaborated with,
            Chat was able to take criticism and make adjustments without getting snippy.

        dt ChatGPT vs GitHub copilot
        dd
          p.
            I have also been using GitHub Copilot to help with the development of the Trivia Spark application.
            I have found that GitHub Copilot is a great tool for helping with the development of the application.
          p.
            GitHub Copilot is a new AI-powered code auto-completion tool that was released by GitHub in 2021. It uses
            advanced machine learning models to suggest code snippets and entire functions as you type,
            making it faster and easier to write code.
          p.
            In using Copilot, it works like traditional Intellisense in Visual Studio by providing suggestions
            based on the current context in the code editor. It offers suggestions for class names, methods, properties,
            and other elements that are available in the current scope.  The difference between the two is that GitHub Copilot
            uses advanced AI models that can suggest entire functions or even multiple lines of code based on the context
            and your coding style.  GitHub Copilot takes things a step further by leveraging AI to offer more comprehensive
              and context-aware suggestions.

      h2.mb-5 Chat In Action
      p.
        Here are a few screenshots of the types of collaboration that Chat and I had while working on the Trivia Spark application.

      #carouselControlOrigins.carousel.slide(data-bs-ride='carousel')
        .carousel-indicators
          button.active(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='0' aria-label='Slide 1')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='1' aria-label='Slide 2')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='2' aria-label='Slide 3')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='3' aria-label='Slide 4')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='4' aria-label='Slide 5')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='5' aria-label='Slide 6')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='6' aria-label='Slide 7')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='7' aria-label='Slide 8')
          button(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide-to='8' aria-label='Slide 9')

        .carousel-inner(style={color: 'red', background: 'transparent'})
          .carousel-item.active
            .container.text-center
              h5 Get Unanswered Questions
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-GetUnAnsweredQuestions.png' alt='Get Unanswered Questions')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 Lazy Loading Example
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-LazyLoadingExample.png' alt='Lazy Loading Example')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 Pros and Cons of Virtual Methods
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-ProConVirtualMethods.png' alt='Pros and Cons of Virtual Methods')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5  Refactor With Suggestions
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-RefactorWithInput.png' alt='Refactor With Suggestions')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5  Optimize With Hashset
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-OptimizeWithHashSet.png' alt='Optimize With Hashset')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 Rapid Prototyping
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-RapidPrototyping.png' alt='RapidPrototyping')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 Get Incorrect Questions
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-GetIncorrectQuestions.png' alt='Get Incorrect Questions')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 Game Play Modes
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-GamePlayModes.png' alt='Game Play Modes')
              br(clear='both')
          .carousel-item
            .container.text-center
              h5 ENUM Parse from String
              img.img-fluid.d-block.w-100(src='assets/img/MarkHazleton-ChatGPT-EnumParse.png' alt='Enum Parse from String')
              br(clear='both')

        button.carousel-control-prev(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide='prev')
          span.carousel-control-prev-icon(aria-hidden='true')
          span.visually-hidden Previous
        button.carousel-control-next(type='button' data-bs-target='#carouselControlOrigins' data-bs-slide='next' )
          span.carousel-control-next-icon(aria-hidden='true')
          span.visually-hidden Next


      h2 Parting Thoughts
      p.
        The kickoff of the Trivia Spark application was a collaborative effort with ChatGPT.
        Working with ChatGPT, I was able to prototype ideas quickly, overcome obstacles,
        and come up with a working application in a relatively short amount of time.
      p.
        Collaboration between humans and AI models like ChatGPT is becoming increasingly common in the software
        development industry.
      p.
        New tools come along all the time, some of which are more useful than others. ChatGPT is a tool that I will
        continue to evaluate to find ways to improve my development process.
      p.
        The tools that I use are constantly evolving, here are a few of the other tools I currently use:
      ul
        li <a href="https://visualstudio.microsoft.com/vs/">Visual Studio 2022</a>
        li <a href="https://www.devexpress.com/products/coderush/">Coderush by DevExpress </a>
        li <a href="https://en.wikipedia.org/wiki/GitHub_Copilot">GitHub Copilot </a>

      p.
        For now, ChatGPT falls more into the reference tool category.
        Which means I use it outside of my primary development
        tool like Visual Studio or VS Code.  Here are other reference sources I use:
      ul
        li <a href="https://stackoverflow.com/">Stack Overflow</a>
        li <a href="https://www.dotnetrocks.com/">.NET Rocks</a>
        li <a href="https://wilderminds.com/">Shawn Wildermuth - Wilder Minds</a>
        li <a href="https://www.hanselman.com/">Scott Hanselman</a>
        li <a href="https://nickchapsas.com/">Nick Chapsas - Keep Coding</a>

  hr.m-0
