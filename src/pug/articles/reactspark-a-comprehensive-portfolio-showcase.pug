extends ../layouts/modern-layout

block layout-content
  // Breadcrumb Navigation
  nav.bg-light.py-2(aria-label='breadcrumb')
    .container
      ol.breadcrumb.mb-0
        li.breadcrumb-item
          a.text-decoration-none(href='/') Home
        li.breadcrumb-item
          a.text-decoration-none(href='/articles') Articles
        li.breadcrumb-item.active(aria-current='page') ReactSpark Portfolio Showcase

  // Hero Section
  section.bg-gradient-primary.py-5
    .container
      .row.align-items-center
        .col-lg-10.mx-auto.text-center
          h1.display-4.fw-bold.mb-3
            i.bi.bi-code-slash.me-3
            | ReactSpark: A Comprehensive Portfolio Showcase
          h2.h3.mb-4 Modern React 19 Development with TypeScript and Vite
          p.lead.mb-5
            | A modern, responsive portfolio website meticulously crafted using React 19 with TypeScript,
            | and built with the lightning-fast Vite build tool. Serving as a tangible demonstration of
            | contemporary web development best practices, it functions as a robust reference implementation
            | for building applications with React.

  // Main Article Content
  article#main-article
    .container
      .row
        .col-lg-8.mx-auto
          // Featured Video Section
          section.mb-5
            .card.shadow-sm
              .card-header.bg-primary.text-white
                h3.card-title.mb-0
                  i.bi.bi-play-circle.me-2
                  | Deep Dive into ReactSpark
              .card-body.p-0
                .ratio.ratio-16x9
                  iframe(
                    src="https://www.youtube.com/embed/jOQHPafhW5Y?si=fY1H0XsZh8GmwKz4"
                    title="Deep Dive: ReactSpark - A Comprehensive Portfolio Showcase"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    referrerpolicy="strict-origin-when-cross-origin"
                    allowfullscreen
                  )
              .card-footer.text-muted
                p.mb-0.small
                  | Video by Mark Hazleton - Audio Overview by NotebookLM by Google. Made with Microsoft Clipchamp.

          // Introduction Section
          section.mb-5
            header.mb-4
              .article-meta.text-muted.mb-3
                time(datetime=publishedDate) #{new Date(publishedDate).toLocaleDateString('en-US', {year: 'numeric', month: 'long', day: 'numeric'})}
                span.mx-2 •
                span by #{pageAuthor}
                span.mx-2 •
                span #{estimatedReadTime} min read

            p.lead.mb-4
              | As a solutions architect and full-stack developer with over 20 years of experience, I've created ReactSpark
              | to demonstrate my expertise in modern frontend development. This project showcases my ability to architect
              | scalable applications using industry best practices, strong typing principles, and component-based design.

            p.mb-4
              | Beyond just code, ReactSpark represents my commitment to creating maintainable, accessible, and
              | performance-optimized solutions that deliver real business value without getting "sidetracked by sizzle."

          // Developer Skills Showcase
          section.mb-5
            .card.bg-dark.text-white.border-primary
              .card-header.bg-primary
                h3.h4.mb-0
                  i.bi.bi-stars.text-warning.me-2
                  | Developer Capabilities Demonstrated
              .card-body
                .row.g-4
                  .col-md-6
                    ul.list-unstyled.mb-0
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info Modern Frontend Architecture:
                        |  Design patterns, state management, and code organization for scalable applications
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info TypeScript Mastery:
                        |  Strong typing, interfaces, and generics for type-safe, error-resistant code
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info API Integration:
                        |  Seamless data fetching, error handling, and state management with RESTful APIs
                  .col-md-6
                    ul.list-unstyled.mb-0
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info Performance Optimization:
                        |  Efficient rendering, bundle optimization, and code splitting
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info Responsive Design:
                        |  Mobile-first approaches and adaptive layouts for all device sizes
                      li.mb-3
                        i.bi.bi-check-circle-fill.text-success.me-2
                        strong.text-info Cloud Deployment:
                        |  CI/CD pipeline setup and infrastructure configuration for GitHub Pages and Azure

          // Project Overview
          section.mb-5
            p.mb-4
              | ReactSpark is an integral component of the broader WebSpark suite that effectively illustrates how
              | dynamic web frontends can be seamlessly powered by well-structured APIs. The full source code is
              | openly available on GitHub, and you can explore the live application on GitHub Pages.

            .d-flex.flex-wrap.gap-3.mb-4
              a.btn.btn-primary.btn-lg(href="https://reactspark.markhazleton.com" target="_blank" rel="noopener")
                i.bi.bi-box-arrow-up-right.me-2
                | View Live Demo
              a.btn.btn-outline-primary.btn-lg(href="https://github.com/markhazleton/reactsparkportfolio" target="_blank" rel="noopener")
                i.bi.bi-github.me-2
                | View Source Code          // Architecture and Technology Stack
          section#architecture.mb-5
            h2.h3.mb-4
              i.bi.bi-diagram-3.me-2
              | Architecture and Technology Stack
            p.lead.mb-4
              | ReactSpark presents a clean and professional design, optimized for responsiveness across all device sizes
              | thanks to the integration of Bootstrap 5.3. It offers a compelling showcase of a developer's skills and projects,
              | incorporating dynamic content fetching and interactive components.

            .row.g-4.mb-5
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-layers.text-primary.me-2
                      | Frontend Framework
                    p.card-text
                      | React 19.1 with TypeScript 5.8 leveraging strict type checking for enhanced
                      | developer experience and code maintainability.
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-lightning.text-primary.me-2
                      | Build Tool
                    p.card-text
                      | Vite 6.3, ensuring rapid development cycles with features like
                      strong hot module replacement (HMR)
                      | .
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-palette.text-primary.me-2
                      | Styling
                    p.card-text
                      | A combination of Bootstrap 5.3.5, SCSS/Sass for customizable component-level styles,
                      | React Bootstrap 2.10.9, and Bootstrap Icons 1.11.3.
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-diagram-3.text-primary.me-2
                      | State Management
                    p.card-text The React Context API is employed for managing application-wide state, such as the theme.
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-signpost.text-primary.me-2
                      | Routing
                    p.card-text React Router v7.5 enables seamless navigation between different sections of the portfolio.
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-cloud-arrow-down.text-primary.me-2
                      | HTTP Client
                    p.card-text Axios 1.8.4 is used for efficient API interactions.

            .card.mb-4
              .card-header.bg-dark.text-white
                h4.mb-0
                  i.bi.bi-code.me-2
                  | Example Component Type Definition
              .card-body
                pre.language-typescript
                  code.language-typescript.
                    // Hero component type definition
                    interface HeroProps {
                      profile: {
                        name: string;
                        title: string;
                        description: string;
                        socialLinks: {
                          github?: string;
                          linkedin?: string;
                          twitter?: string;
                        };
                      };
                      isLoading: boolean;
                      error?: Error | null;
                    }

                    const Hero: React.FC<HeroProps> = ({
                      profile,
                      isLoading,
                      error
                    }) => {
                      // Component implementation
                      return (
                        // JSX markup
                      );
                    };

          // Key Features Section
          section#features.mb-5
            h2.h3.mb-4
              i.bi.bi-star.me-2
              | Key Features
            .row.g-4.mb-5
              .col-md-4.text-center
                .mb-4
                  i.bi.bi-person-vcard.display-4.text-primary.mb-3
                  h3.h5 Hero Section
                  p A compelling introduction with profile information and quick navigation links.

              .col-md-4.text-center
                .mb-4
                  i.bi.bi-kanban.display-4.text-primary.mb-3
                  h3.h5 Projects
                  p Displays project cards with descriptions, technologies used, and direct links.

              .col-md-4.text-center
                .mb-4
                  i.bi.bi-newspaper.display-4.text-primary.mb-3
                  h3.h5 Articles
                  p Dynamically fetches and displays the latest blog posts from an RSS feed.

              .col-md-4.text-center
                .mb-4
                  i.bi.bi-cloud-sun.display-4.text-primary.mb-3
                  h3.h5 Weather Forecast
                  p Interactive component for current weather conditions by city name.

              .col-md-4.text-center
                .mb-4
                  i.bi.bi-emoji-laughing.display-4.text-primary.mb-3
                  h3.h5 Joke Generator
                  p Fetches random jokes from an API with share functionality.

              .col-md-4.text-center
                .mb-4
                  i.bi.bi-chat-dots.display-4.text-primary.mb-3
                  h3.h5 Chat
                  p Real-time chat interface powered by SignalR.

            .card
              .card-header.bg-info.text-white
                h4.mb-0
                  i.bi.bi-cloud-sun.me-2
                  | Weather Component Example
              .card-body
                pre.language-typescript
                  code.language-typescript.
                    // Weather component with TypeScript and Axios
                    interface WeatherData {
                      main: {
                        temp: number;
                        humidity: number;
                        feels_like: number;
                      };
                      wind: {
                        speed: number;
                      };
                      weather: Array<{
                        description: string;
                        icon: string;
                      }>;
                      name: string;
                      coord: {
                        lat: number;
                        lon: number;
                      };
                    }

                    const Weather: React.FC = () => {
                      const [city, setCity] = useState<string>("");
                      const [weather, setWeather] = useState<WeatherData | null>(null);
                      const [loading, setLoading] = useState<boolean>(false);
                      const [error, setError] = useState<string | null>(null);

                      const fetchWeather = async () => {
                        setLoading(true);
                        setError(null);

                        try {
                          const response = await axios.get(
                            `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`
                          );
                          setWeather(response.data);

                          // Save to recent searches in localStorage
                          saveToRecentSearches(city);
                        } catch (err) {
                          setError("Failed to fetch weather data. Please check the city name.");
                        } finally {
                          setLoading(false);
                        }
                      };

                      // Component JSX implementation
                    };          // Project Components Section
          section#components.mb-5
            h2.h3.mb-4
              i.bi.bi-puzzle.me-2
              | Project Components
            p.lead.mb-4
              | The ReactSpark project is organized into a set of reusable components, contributing to its modular
              | and maintainable structure:

            .row.g-4.mb-5
              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-person-vcard.text-primary.me-2
                      | Hero
                    p.card-text The main introductory component.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary TypeScript
                      span.badge.bg-secondary React FC
                      span.badge.bg-info Props Interface

              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-newspaper.text-primary.me-2
                      | Articles
                    p.card-text Fetches and displays blog posts from an RSS feed.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary Axios
                      span.badge.bg-secondary XML2JS
                      span.badge.bg-info Type Safety

              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-kanban.text-primary.me-2
                      | Projects
                    p.card-text Showcases the developer's projects.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary React Router
                      span.badge.bg-secondary Interface Definitions
                      span.badge.bg-info Image Optimization

              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-cloud-sun.text-primary.me-2
                      | Weather Forecast
                    p.card-text Provides interactive weather lookup functionality.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary OpenWeather API
                      span.badge.bg-secondary LocalStorage
                      span.badge.bg-info Error Handling

              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-emoji-laughing.text-primary.me-2
                      | Joke Generator
                    p.card-text Fetches and displays random jokes.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary JokeAPI
                      span.badge.bg-secondary Social Sharing
                      span.badge.bg-info Async/Await

              .col-lg-6
                .card.h-100.shadow-sm
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-chat-dots.text-primary.me-2
                      | Chat
                    p.card-text Enables real-time communication.
                    .d-flex.flex-wrap.gap-2.mt-3
                      span.badge.bg-primary SignalR
                      span.badge.bg-secondary React Markdown
                      span.badge.bg-info Real-time Updates

          // Development Workflow Section
          section#workflow.mb-5
            .row.align-items-center
              .col-lg-6.mb-4.mb-lg-0
                h2.h3.mb-4
                  i.bi.bi-gear.me-2
                  | Development Workflow
                p.mb-4 The development workflow for ReactSpark is streamlined for efficiency:
                ul.list-group.list-group-flush
                  li.list-group-item.d-flex.align-items-start.ps-0.border-0
                    i.bi.bi-lightning.text-primary.me-3.mt-1
                    div
                      strong Hot module replacement (HMR)
                      div.text-muted provided by Vite enables rapid development
                  li.list-group-item.d-flex.align-items-start.ps-0.border-0
                    i.bi.bi-shield-check.text-primary.me-3.mt-1
                    div
                      strong TypeScript ensures type safety
                      div.text-muted throughout the codebase
                  li.list-group-item.d-flex.align-items-start.ps-0.border-0
                    i.bi.bi-eyeglasses.text-primary.me-3.mt-1
                    div
                      strong ESLint maintains code quality
                      div.text-muted and consistency
                  li.list-group-item.d-flex.align-items-start.ps-0.border-0
                    i.bi.bi-braces.text-primary.me-3.mt-1
                    div
                      strong SCSS compilation
                      div.text-muted with watch mode for styling
                  li.list-group-item.d-flex.align-items-start.ps-0.border-0
                    i.bi.bi-box-seam.text-primary.me-3.mt-1
                    div
                      strong Optimized production builds
                      div.text-muted targeting the docs folder

              .col-lg-6
                .card.shadow-sm
                  .card-header.bg-success.text-white
                    h4.mb-0
                      i.bi.bi-tools.me-2
                      | Vite Configuration Example
                  .card-body
                    pre.language-javascript
                      code.language-javascript.
                        // vite.config.ts
                        import { defineConfig } from 'vite';
                        import react from '@vitejs/plugin-react';
                        import tsconfigPaths from 'vite-tsconfig-paths';

                        export default defineConfig({
                          plugins: [react(), tsconfigPaths()],
                          build: {
                            outDir: 'docs',
                            sourcemap: true,
                            minify: 'terser',
                            terserOptions: {
                              compress: {
                                drop_console: true,
                              },
                            },
                          },
                          server: {
                            port: 3000,
                            open: true,
                            cors: true,
                          },
                        });

          // Deployment Section
          section#deployment.mb-5
            h2.h3.mb-4
              i.bi.bi-cloud-upload.me-2
              | Deployment
            .row.g-4.mb-5
              .col-md-6
                .card.h-100.border-primary
                  .card-header.bg-primary.text-white
                    h3.h5.mb-0
                      i.bi.bi-github.me-2
                      | GitHub Pages
                  .card-body
                    p The project is set up for easy deployment to GitHub Pages by outputting the production build to the docs folder.
                    p.mb-0 This allows serving the site directly from the docs folder by default on GitHub Pages.

              .col-md-6
                .card.h-100.border-info
                  .card-header.bg-info.text-white
                    h3.h5.mb-0
                      i.bi.bi-cloud.me-2
                      | Azure Static Web Apps
                  .card-body
                    p Includes configuration files and a CI/CD pipeline defined with GitHub Actions for automated deployments.
                    p.mb-0 Enables features like a global CDN, free SSL certificates, and built-in API backend through Azure Functions.

            .card
              .card-header.bg-warning.text-dark
                h4.mb-0
                  i.bi.bi-play-circle.me-2
                  | GitHub Actions Workflow
              .card-body
                pre.language-yaml
                  code.language-yaml.
                    # .github/workflows/azure-static-web-apps.yml
                    name: Deploy to Azure Static Web Apps

                    on:
                      push:
                        branches:
                          - main

                    jobs:
                      build_and_deploy:
                        runs-on: ubuntu-latest
                        steps:
                          - uses: actions/checkout@v3

                          - name: Setup Node.js
                            uses: actions/setup-node@v3
                            with:
                              node-version: 18

                          - name: Install dependencies
                            run: npm ci

                          - name: Build
                            run: npm run build

                          - name: Deploy
                            uses: Azure/static-web-apps-deploy@v1
                            with:
                              azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
                              repo_token: ${{ secrets.GITHUB_TOKEN }}
                              action: "upload"
                              app_location: "docs"
                              api_location: "api"
                              output_location: ""          // Integration with WebSpark Suite
          section#integration.mb-5
            h2.h3.mb-4
              i.bi.bi-diagram-2.me-2
              | Integration with WebSpark Suite
            p.lead.mb-4
              | ReactSpark serves as a crucial component in the broader WebSpark ecosystem, integrating with other projects:

            .row.g-4.mb-5
              .col-md-6
                .card.h-100.border-success
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-chat-square-text.text-success.me-2
                      | PromptSpark
                    p.card-text
                      | Connects with PromptSpark for integrated LLM-driven chat functionality and content generation capabilities.

              .col-md-6
                .card.h-100.border-info
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-hdd-network.text-info.me-2
                      | WebSpark API
                    p.card-text
                      | Consumes the WebSpark API for retrieving portfolio data, project information, and user settings.

              .col-md-6
                .card.h-100.border-warning
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-signpost-split.text-warning.me-2
                      | SignalR Hub
                    p.card-text
                      | Utilizes a centralized SignalR hub for real-time communication features throughout the application.

              .col-md-6
                .card.h-100.border-danger
                  .card-body
                    h3.h5.card-title.mb-3
                      i.bi.bi-shield-check.text-danger.me-2
                      | Identity Management
                    p.card-text
                      | Implements shared identity management components for consistent authentication across the WebSpark ecosystem.

          // SEO & Accessibility Section
          section#seo-accessibility.mb-5
            .row.align-items-center
              .col-lg-6.mb-4.mb-lg-0
                h2.h3.mb-4
                  i.bi.bi-universal-access.me-2
                  | SEO & Accessibility
                p.mb-4 ReactSpark prioritizes both search engine visibility and accessibility standards:
                ul.list-group.list-group-flush
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | Semantic HTML5 structure
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | Comprehensive meta tags and Open Graph data
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | Proper heading hierarchy for screen readers
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | ARIA attributes for interactive elements
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | Keyboard navigation support
                  li.list-group-item.d-flex.align-items-center.ps-0.border-0
                    i.bi.bi-check-circle-fill.text-success.me-3
                    | Color contrast compliance with WCAG guidelines

              .col-lg-6
                .card.shadow-sm
                  .card-header.bg-primary.text-white
                    h5.mb-0
                      i.bi.bi-link-45deg.me-2
                      | Related Articles
                  .card-body
                    p.card-text Explore detailed articles about ReactSpark development:
                    ul.list-group.list-group-flush
                      li.list-group-item.border-0.ps-0
                        a.text-decoration-none(href="/articles/building-my-first-react-site-using-vite.html")
                          i.bi.bi-arrow-right.me-2
                          | Building My First React Site Using Vite and GitHub
                      li.list-group-item.border-0.ps-0
                        a.text-decoration-none(href="/articles/adding-weather-component-a-typescript-learning-journey.html")
                          i.bi.bi-arrow-right.me-2
                          | Adding Weather to My Profile Application
                      li.list-group-item.border-0.ps-0
                        a.text-decoration-none(href="/articles/building-real-time-chat-with-react-signalr-and-markdown-streaming.html")
                          i.bi.bi-arrow-right.me-2
                          | Building Real-Time Chat with React, SignalR, and Markdown Streaming

          // Conclusion Section
          section.mb-5
            .card.bg-dark.text-white
              .card-body.py-5.text-center
                h2.h3.mb-4.text-white
                  i.bi.bi-trophy.text-warning.me-2
                  | Conclusion
                p.lead.mb-4.text-white
                  | ReactSpark stands as a comprehensive and well-engineered portfolio showcase, effectively demonstrating
                  | modern web development principles through the power of React, the type safety of TypeScript, and the
                  | efficiency of Vite. As part of the WebSpark ecosystem, it provides a tangible example of how contemporary
                  | frontend development can integrate with robust API services for a complete web solution.
                .d-flex.justify-content-center.flex-wrap.gap-3
                  a.btn.btn-primary.btn-lg(href="https://github.com/markhazleton/reactsparkportfolio" target="_blank" rel="noopener")
                    i.bi.bi-github.me-2
                    | Explore the Source Code
                  a.btn.btn-outline-light.btn-lg(href="https://reactspark.markhazleton.com" target="_blank" rel="noopener")
                    i.bi.bi-box-arrow-up-right.me-2
                    | View Live Demo

        .col-lg-4
          aside.sticky-top(style="top: 2rem;")
            // Table of Contents
            nav.mb-4(aria-label='Table of Contents')
              .card.shadow-sm
                .card-header.bg-primary.text-white
                  h3.card-title.mb-0
                    i.bi.bi-list-ul.me-2
                    | Table of Contents
                .card-body
                  ol.list-group.list-group-numbered.list-group-flush
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#architecture') Architecture & Tech Stack
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#features') Key Features
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#components') Project Components
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#workflow') Development Workflow
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#deployment') Deployment
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#integration') WebSpark Integration
                    li.list-group-item.border-0.ps-0
                      a.text-decoration-none(href='#seo-accessibility') SEO & Accessibility

            // Quick Links
            .card.shadow-sm.mb-4
              .card-header.bg-success.text-white
                h5.mb-0
                  i.bi.bi-rocket-takeoff.me-2
                  | Quick Links
              .card-body
                .d-grid.gap-2
                  a.btn.btn-outline-primary(href="https://reactspark.markhazleton.com" target="_blank" rel="noopener")
                    i.bi.bi-eye.me-2
                    | Live Demo
                  a.btn.btn-outline-secondary(href="https://github.com/markhazleton/reactsparkportfolio" target="_blank" rel="noopener")
                    i.bi.bi-github.me-2
                    | Source Code

            // Technology Stack
            .card.shadow-sm.mb-4
              .card-header.bg-info.text-white
                h5.mb-0
                  i.bi.bi-stack.me-2
                  | Technology Stack
              .card-body
                .d-flex.flex-wrap.gap-2
                  span.badge.bg-primary React 19
                  span.badge.bg-secondary TypeScript 5.8
                  span.badge.bg-success Vite 6.3
                  span.badge.bg-info Bootstrap 5.3
                  span.badge.bg-warning.text-dark Axios
                  span.badge.bg-danger SignalR
                  span.badge.bg-dark React Router

            // Related WebSpark Projects
            .card.shadow-sm
              .card-header.bg-dark.text-white
                h5.mb-0
                  i.bi.bi-collection.me-2
                  | WebSpark Ecosystem
              .card-body
                ul.list-unstyled.mb-0
                  li.mb-2
                    i.bi.bi-arrow-right.text-primary.me-2
                    a.text-decoration-none(href="/articles/webspark-api-integration.html") WebSpark API
                  li.mb-2
                    i.bi.bi-arrow-right.text-primary.me-2
                    a.text-decoration-none(href="/articles/promptspark-integration.html") PromptSpark
                  li.mb-2
                    i.bi.bi-arrow-right.text-primary.me-2
                    a.text-decoration-none(href="/articles/signalr-chat-integration.html") SignalR Hub
                  li
                    i.bi.bi-arrow-right.text-primary.me-2
                    a.text-decoration-none(href="/articles/webspark-overview.html") Complete Ecosystem
