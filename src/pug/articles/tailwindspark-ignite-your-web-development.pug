extends ../layouts/modern-layout

block layout-content
  br
  // Hero Section
  section.bg-gradient-primary.py-5
    .container
      .row.align-items-center
        .col-lg-10.mx-auto.text-center
          h1.display-4.fw-bold.mb-3
            i.bi.bi-palette.me-3
            | TailwindSpark: My Journey from Bootstrap DevKit to Utility-First CSS
          h2.h3.mb-4 Exploring the shift from component-driven to utility-first CSS architecture
          p.lead.mb-5
            | After years of building the WebSpark portfolio with Bootstrap, I embarked on a comprehensive exploration of Tailwind CSS through TailwindSpark - a real-world testing ground for utility-first CSS principles.

  // Main Article Content
  article#main-article
    .container
      .row
        .col-lg-8.mx-auto

          // Introduction Section
          section#introduction.mb-5
            h2.h3.text-primary.mb-4
              i.bi.bi-rocket-takeoff.me-2
              | The WebSpark Evolution
            p.lead.mb-4
              | For those unfamiliar with my work, WebSpark represents my philosophy of "making technology work for business" through practical, real-world applications. Over the years, this suite has grown to include:

            .row.g-3.mb-4
              .col-md-6
                .card.h-100.border-primary
                  .card-body
                    h5.card-title
                      i.bi.bi-robot.me-2
                      | PromptSpark
                    p.card-text AI prompt management for Large Language Models
              .col-md-6
                .card.h-100.border-success
                  .card-body
                    h5.card-title
                      i.bi.bi-egg-fried.me-2
                      | RecipeSpark
                    p.card-text Recipe organization and sharing platform
              .col-md-6
                .card.h-100.border-warning
                  .card-body
                    h5.card-title
                      i.bi.bi-puzzle.me-2
                      | TriviaSpark
                    p.card-text Interactive quizzes and trivia games
              .col-md-6
                .card.h-100.border-info
                  .card-body
                    h5.card-title
                      i.bi.bi-palette-fill.me-2
                      | TailwindSpark
                    p.card-text Comprehensive utility-first CSS showcase

            p.mb-4
              | Each project in the WebSpark ecosystem serves dual purposes: solving real business problems while demonstrating modern development practices. TailwindSpark continues this tradition by exploring whether utility-first CSS could replace my long-standing relationship with Bootstrap.

          // Demo Screenshot Placeholder
          section#demo-overview.mb-5
            .card.shadow-sm.border-0
              .card-header.bg-info.text-white
                h3.h4.mb-0
                  i.bi.bi-eye.me-2
                  | Live Demo Overview
              .card-body
                .row.align-items-center
                  .col-md-8
                    p.mb-3
                      | TailwindSpark showcases three comprehensive demo applications, each targeting different business use cases and demonstrating the flexibility of utility-first CSS.
                    a.btn.btn-primary.me-3(href="https://markhazleton.github.io/tailwind-demo/" target="_blank" rel="noopener")
                      i.bi.bi-box-arrow-up-right.me-2
                      | View Live Demo
                    a.btn.btn-outline-primary(href="https://github.com/markhazleton/tailwind-demo" target="_blank" rel="noopener")
                      i.bi.bi-github.me-2
                      | View Source Code
                  .col-md-4
                    .card.border-0.shadow-sm.h-100
                      .card-body.p-0
                        .position-relative.overflow-hidden
                          a.btn.btn-primary.me-3(href="https://markhazleton.github.io/tailwind-demo/" target="_blank" rel="noopener")
                            img.img-fluid.w-100(
                              src="/assets/img/MarkHazleton-TailwindSpark-Home.png"
                              alt="TailwindSpark Home Screenshot "
                              title="TailwindSpark Home Screenshot"
                              loading="lazy"
                              style="transition: transform 0.3s ease; cursor: pointer;"
                              onmouseover="this.style.transform='scale(1.05)'"
                              onmouseout="this.style.transform='scale(1)'"
)

  // Why the Shift Section
  section#why-shift.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-arrow-left-right.me-2
      | Why the Shift from Bootstrap?
    p.lead.mb-4
      | As a developer who's been using Bootstrap since version 2, I've always appreciated its "UI DevKit" approach. Bootstrap provides pre-built components that you customize with variables and modifier classes.

    p.mb-4
      | However, after building multiple WebSpark applications, I started noticing patterns:

    .row.g-3.mb-4
      .col-lg-6
        .card.border-danger.h-100
          .card-header.bg-danger.text-white
            h5.card-title.mb-0
              i.bi.bi-exclamation-triangle.me-2
              | Bootstrap Challenges
          .card-body
            ul.list-unstyled.mb-0
              li.mb-2
                i.bi.bi-x-circle.text-danger.me-2
                strong Design Homogenization:
                | Every Bootstrap site has that "Bootstrap look"
              li.mb-2
                i.bi.bi-x-circle.text-danger.me-2
                strong Override Hell:
                | Customizing Bootstrap often meant fighting its opinions
              li.mb-2
                i.bi.bi-x-circle.text-danger.me-2
                strong Bundle Bloat:
                | Shipping CSS for components I never used
              li.mb-0
                i.bi.bi-x-circle.text-danger.me-2
                strong Design System Constraints:
                | Struggling to implement unique design requirements
      .col-lg-6
        .card.border-success.h-100
          .card-header.bg-success.text-white
            h5.card-title.mb-0
              i.bi.bi-check-circle.me-2
              | Tailwind Promises
          .card-body
            ul.list-unstyled.mb-0
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Design Freedom:
                | No more fighting framework opinions
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Utility Precision:
                | Exact control over every design decision
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Bundle Optimization:
                | Only ship CSS you actually use
              li.mb-0
                i.bi.bi-check-circle.text-success.me-2
                strong Rapid Prototyping:
                | Utilities enable quick iteration

  // Three Demo Applications Section
  section#demo-applications.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-grid-3x3-gap.me-2
      | The TailwindSpark Approach: Three Real-World Demos
    p.lead.mb-4
      | TailwindSpark isn't just another demo site. It's a comprehensive exploration of utility-first CSS through the lens of real business applications.

    // SaaS Dashboard Demo
    .card.mb-4.shadow-sm
      .card-header.bg-primary.text-white
        h4.h5.mb-0
          i.bi.bi-speedometer2.me-2
          | 1. SaaS Dashboard Demo
      .card-body
        .row.align-items-center
          .col-md-8
            p.mb-3
              | This mirrors the complexity of PromptSpark's admin interface, featuring real-time data visualization, complex table structures, and responsive navigation.
            h6.text-primary.mb-2 Key Features:
            ul.mb-3
              li Real-time data visualization with interactive charts
              li Complex table structures with filtering and search
              li Responsive sidebar navigation with collapsible states
              li Comprehensive dark mode implementation
              li Advanced user management and settings interfaces
            a.btn.btn-primary.btn-sm(href="https://markhazleton.github.io/tailwind-demo/#/dashboard" target="_blank" rel="noopener")
              i.bi.bi-box-arrow-up-right.me-2
              | View Dashboard Demo
          .col-md-4
            .card.border-0.shadow-sm.h-100
              .card-header.bg-gradient.bg-primary.text-center.py-2
                h6.card-title.mb-0.fw-bold.text-white
                  i.bi.bi-speedometer2.me-2
                  | SaaS Dashboard
              .card-body.p-0
                .position-relative.overflow-hidden
                  a(href="https://markhazleton.github.io/tailwind-demo/#/dashboard" target="_blank" rel="noopener")
                    img.img-fluid.w-100(
                      src="/assets/img/MarkHazleton-TailwindSpark-SaaS-Dashboard.png"
                      alt="TailwindSpark SaaS Dashboard Demo featuring real-time analytics, data visualization, and responsive navigation"
                      title="SaaS Dashboard Demo - Analytics & Metrics"
                      loading="lazy"
                      style="transition: transform 0.3s ease; cursor: pointer;"
                      onmouseover="this.style.transform='scale(1.05)'"
                      onmouseout="this.style.transform='scale(1)'"
                    )
                  .position-absolute.bottom-0.start-0.end-0.bg-dark.bg-opacity-75.text-white.p-2
                    .d-flex.justify-content-center.align-items-center
                      .badge.bg-info.me-2 Analytics
                      .badge.bg-success Metrics

    // E-commerce Demo
    .card.mb-4.shadow-sm
      .card-header.bg-success.text-white
        h4.h5.mb-0
          i.bi.bi-shop.me-2
          | 2. E-commerce Store Demo
      .card-body
        .row.align-items-center
          .col-md-8
            p.mb-3
              | Drawing inspiration from potential RecipeSpark marketplace features, this demo showcases modern e-commerce patterns with advanced filtering and responsive design.
            h6.text-success.mb-2 Key Features:
            ul.mb-3
              li Product grids with advanced filtering and search
              li Shopping cart functionality with real-time updates
              li Modal dialogs for quick product views
              li Image optimization and responsive layouts
              li Mobile-optimized checkout flow simulation
            a.btn.btn-success.btn-sm(href="https://markhazleton.github.io/tailwind-demo/#/ecommerce" target="_blank" rel="noopener")
              i.bi.bi-box-arrow-up-right.me-2
              | View E-commerce Demo
          .col-md-4
            .card.border-0.shadow-sm.h-100
              .card-header.bg-gradient.bg-success.text-center.py-2
                h6.card-title.mb-0.fw-bold.text-white
                  i.bi.bi-shop.me-2
                  | E-commerce Store
              .card-body.p-0
                .position-relative.overflow-hidden
                  a(href="https://markhazleton.github.io/tailwind-demo/#/ecommerce" target="_blank" rel="noopener")
                    img.img-fluid.w-100(
                      src="/assets/img/MarkHazleton-TailwindSpark-eCommerce.png"
                      alt="TailwindSpark E-commerce Demo featuring product grids, shopping cart functionality, and responsive design"
                      title="E-commerce Store Demo - Product Grid & Cart"
                      loading="lazy"
                      style="transition: transform 0.3s ease; cursor: pointer;"
                      onmouseover="this.style.transform='scale(1.05)'"
                      onmouseout="this.style.transform='scale(1)'"
                    )
                  .position-absolute.bottom-0.start-0.end-0.bg-dark.bg-opacity-75.text-white.p-2
                    .d-flex.justify-content-center.align-items-center
                      .badge.bg-warning.me-2 Products
                      .badge.bg-primary Cart

    // Marketing Landing Page Demo
    .card.mb-4.shadow-sm
      .card-header.bg-warning.text-dark
        h4.h5.mb-0
          i.bi.bi-megaphone.me-2
          | 3. Marketing Landing Page Demo
      .card-body
        .row.align-items-center
          .col-md-8
            p.mb-3
              | A high-converting agency-style landing page showcasing conversion-focused design patterns with modern animations and form validation.
            h6.text-warning.mb-2 Key Features:
            ul.mb-3
              li Hero sections with gradient backgrounds and animations
              li Testimonial carousels with auto-rotation
              li Portfolio galleries with sophisticated hover effects
              li Advanced form validation with visual feedback
              li Smooth scroll animations and parallax effects
            a.btn.btn-warning.btn-sm(href="https://markhazleton.github.io/tailwind-demo/#/marketing" target="_blank" rel="noopener")
              i.bi.bi-box-arrow-up-right.me-2
              | View Marketing Demo
          .col-md-4
            .card.border-0.shadow-sm.h-100
              .card-header.bg-gradient.bg-warning.text-center.py-2
                h6.card-title.mb-0.fw-bold.text-dark
                  i.bi.bi-megaphone.me-2
                  | Marketing Landing
              .card-body.p-0
                .position-relative.overflow-hidden
                  a(href="https://markhazleton.github.io/tailwind-demo/#/marketing" target="_blank" rel="noopener")
                    img.img-fluid.w-100(
                      src="/assets/img/MarkHazleton-TailwindSpark-Marketing.png"
                      alt="TailwindSpark Marketing Landing Page Demo featuring hero sections, testimonials, and conversion-focused design patterns"
                      title="Marketing Landing Page Demo - Hero & Testimonials"
                      loading="lazy"
                      style="transition: transform 0.3s ease; cursor: pointer;"
                      onmouseover="this.style.transform='scale(1.05)'"
                      onmouseout="this.style.transform='scale(1)'"
                    )
                  .position-absolute.bottom-0.start-0.end-0.bg-dark.bg-opacity-75.text-white.p-2
                    .d-flex.justify-content-center.align-items-center
                      .badge.bg-danger.me-2 Hero
                      .badge.bg-info Testimonials  // Learning Curve Section
  section#learning-curve.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-graph-up-arrow.me-2
      | The Learning Curve: Bootstrap vs. Tailwind
    p.lead.mb-4
      | The transition wasn't without challenges. Coming from Bootstrap's component mindset to Tailwind's utility approach required fundamental shifts in thinking:

    .row.mb-4
      .col-lg-6
        .card.border-info.h-100
          .card-header.bg-info.text-white
            h5.card-title.mb-0
              i.bi.bi-bootstrap.me-2
              | Bootstrap Thinking
          .card-body
            p.mb-3.text-muted Component-based approach:
            pre.language-html.p-3.rounded.small
              code.language-html.
                <button class="btn btn-primary btn-lg">
                  Primary Button
                </button>
      .col-lg-6
        .card.border-info.h-100
          .card-header.bg-info.text-white
            h5.card-title.mb-0
              i.bi.bi-wind.me-2
              | Tailwind Thinking
          .card-body
            p.mb-3.text-muted Utility-first approach:
            pre.language-html.p-3.rounded.small
              code.language-html.
                <button class="bg-blue-600 hover:bg-blue-700
                  text-white font-medium py-3 px-6
                  rounded-lg transition-colors
                  duration-200">
                  Primary Button
                </button>

    p.mb-4
      | At first, this felt verbose and overwhelming. But as I built more components, patterns emerged, and I began to appreciate the precision and control.

  // Monorepo Architecture Section
  section#monorepo.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-diagram-3.me-2
      | The Monorepo Architecture
    p.lead.mb-4
      | One of my key decisions was structuring TailwindSpark as a monorepo using Turborepo. This reflects real-world development scenarios where you need shared design systems.

    .row.g-3.mb-4
      .col-md-4
        .card.border-primary.h-100
          .card-body.text-center
            i.bi.bi-palette2.display-4.text-primary.mb-3
            h5.card-title Design Tokens
            p.card-text.small
              code @tailwindspark/design-tokens
            p.card-text Shared color palettes, spacing scales, and typography systems
      .col-md-4
        .card.border-success.h-100
          .card-body.text-center
            i.bi.bi-building-gear.display-4.text-success.mb-3
            h5.card-title UI Components
            p.card-text.small
              code @tailwindspark/ui-components
            p.card-text Reusable React components with TypeScript interfaces
      .col-md-4
        .card.border-warning.h-100
          .card-body.text-center
            i.bi.bi-display.display-4.text-warning.mb-3
            h5.card-title Demo App
            p.card-text.small
              code @tailwindspark/demo-app
            p.card-text Comprehensive showcase application with routing

    p.mb-4
      | This architecture allowed me to explore how Tailwind scales across multiple packages while maintaining consistency - a crucial consideration for any organization looking to adopt utility-first CSS.

  // Key Discoveries Section
  section#discoveries.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-lightbulb.me-2
      | Key Discoveries
    p.lead.mb-4
      | After building TailwindSpark, several insights emerged about the utility-first approach:

    .row.mb-4
      .col-lg-6
        .card.border-success.h-100
          .card-header.bg-success.text-white
            h5.card-title.mb-0
              i.bi.bi-heart.me-2
              | What I Love About Tailwind
          .card-body
            ul.list-unstyled.mb-0
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Design Freedom:
                | No more fighting framework opinions
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Rapid Prototyping:
                | Utilities enable quick iteration
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Consistent Spacing:
                | The spacing scale creates visual harmony
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Responsive Design:
                | Mobile-first utilities are intuitive
              li.mb-2
                i.bi.bi-check-circle.text-success.me-2
                strong Dark Mode:
                | Built-in dark mode support is fantastic
              li.mb-0
                i.bi.bi-check-circle.text-success.me-2
                strong Bundle Optimization:
                | Only ship CSS you actually use
      .col-lg-6
        .card.border-warning.h-100
          .card-header.bg-warning.text-dark
            h5.card-title.mb-0
              i.bi.bi-question-circle.me-2
              | What I Miss from Bootstrap
          .card-body
            ul.list-unstyled.mb-0
              li.mb-2
                i.bi.bi-dash-circle.text-warning.me-2
                strong Component Conventions:
                | Established patterns for common UI elements
              li.mb-2
                i.bi.bi-dash-circle.text-warning.me-2
                strong Documentation Depth:
                | Bootstrap's component docs are comprehensive
              li.mb-2
                i.bi.bi-dash-circle.text-warning.me-2
                strong Team Onboarding:
                | Easier for new developers to understand
              li.mb-0
                i.bi.bi-dash-circle.text-warning.me-2
                strong Accessibility Defaults:
                | Bootstrap components come with ARIA attributes

  // Performance Story Section
  section#performance.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-speedometer.me-2
      | The Performance Story
    p.lead.mb-4
      | One of the most compelling aspects of Tailwind is its approach to CSS optimization.

    .row.align-items-center.mb-4
      .col-md-12
        .card.border-primary
          .card-body
            h5.card-title.text-primary Bundle Size Comparison
            .row.text-center
              .col-6
                .border-end
                  h3.text-danger.mb-1 ~150KB
                  p.mb-0.small Bootstrap CSS
                  p.mb-0.text-muted (Full Framework)
              .col-6
                h3.text-success.mb-1 &lt;20KB
                p.mb-0.small Tailwind CSS
                p.mb-0.text-muted (Purged Build)
            .mt-3
              .progress.mb-2(style="height: 20px;")
                .progress-bar.bg-danger(style="width: 100%;") Bootstrap
              .progress(style="height: 20px;")
                .progress-bar.bg-success(style="width: 13%;") Tailwind

    p.mb-4
      | With Bootstrap, I was shipping ~150KB of CSS even for simple sites. With Tailwind's purging, TailwindSpark ships only the utilities actually used - typically under 20KB for complex applications.

  // Building Real Components Section
  section#real-components.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-building.me-2
      | Building Real Components
    p.lead.mb-4
      | The component library in TailwindSpark demonstrates how to build production-ready components with Tailwind utilities:

    .card.mb-4.shadow-sm
      .card-header.bg-secondary.text-white
        h5.card-title.mb-0
          i.bi.bi-code-square.me-2
          | Button Component Implementation
      .card-body
        pre.language-typescript
          code.language-typescript.
            // Button component with Tailwind utilities
            const buttonVariants = {
              primary: 'bg-primary-600 hover:bg-primary-700 focus:ring-primary-500 text-white shadow-sm',
              secondary: 'bg-secondary-600 hover:bg-secondary-700 focus:ring-secondary-500 text-white shadow-sm',
              ghost: 'bg-transparent hover:bg-secondary-100 focus:ring-secondary-500 text-secondary-700',
            };

            const buttonSizes = {
              sm: 'px-3 py-1.5 text-sm',
              md: 'px-4 py-2 text-sm',
              lg: 'px-6 py-3 text-base',
            };

    p.mb-4
      | This approach provides the flexibility of utilities while maintaining the developer experience of component APIs.

  // Dark Mode Implementation Section
  section#dark-mode.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-moon.me-2
      | The Dark Mode Implementation
    p.lead.mb-4
      | One area where Tailwind truly shines is dark mode. The
      code.bg-light.px-2.py-1 dark:
      |  prefix makes theming straightforward:

    .row.mb-4
      .col-lg-6
        .card.border-light.h-100
          .card-header.bg-light.text-dark
            h5.card-title.mb-0
              i.bi.bi-sun.me-2
              | Light Mode
          .card-body
            pre.language-html.small
              code.language-html.
                <div class="bg-white text-gray-900">
                  Light mode content
                </div>
      .col-lg-6
        .card.border-dark.h-100
          .card-header.bg-dark.text-light
            h5.card-title.mb-0
              i.bi.bi-moon.me-2
              | Dark Mode
          .card-body
            pre.language-html.small
              code.language-html.
                <div class="bg-white dark:bg-gray-900
                  text-gray-900 dark:text-gray-100">
                  Adaptive content
                </div>

    p.mb-4
      | Throughout TailwindSpark, every component supports both light and dark themes with system preference detection and manual toggle - something that would have required significant custom CSS with Bootstrap.

  // Animation and Micro-interactions Section
  section#animations.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-magic.me-2
      | Animation and Micro-interactions
    p.lead.mb-4
      | Tailwind's animation utilities enabled me to add polish without external libraries:

    .row.g-3.mb-4
      .col-md-4
        .card.border-info.h-100
          .card-header.bg-info.text-white
            h6.card-title.mb-0 Hover Effects
          .card-body
            pre.language-html.small
              code.language-html.
                &lt;div class="transform transition-transform
                  duration-300 hover:scale-110"&gt;
                  Hover me
                &lt;/div&gt;
      .col-md-4
        .card.border-warning.h-100
          .card-header.bg-warning.text-dark
            h6.card-title.mb-0 Loading States
          .card-body
            pre.language-html.small
              code.language-html.
                &lt;div class="animate-spin rounded-full
                  h-4 w-4 border-b-2 border-white"&gt;
                &lt;/div&gt;
      .col-md-4
        .card.border-success.h-100
          .card-header.bg-success.text-white
            h6.card-title.mb-0 Custom Keyframes
          .card-body
            pre.language-html.small
              code.language-html.
                &lt;div class="animate-pulse"&gt;
                  Pulsing content
                &lt;/div&gt;

    p.mb-4
      | The animation showcase in TailwindSpark demonstrates everything from simple hover effects to complex keyframe animations, all achieved with utility classes.

  // The Verdict Section
  section#verdict.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-scales.me-2
      | The Verdict: Bootstrap vs. Tailwind
    p.lead.mb-4
      | After building TailwindSpark, I can't say Tailwind is definitively "better" than Bootstrap - they solve different problems:

    .row.g-4.mb-4
      .col-lg-6
        .card.border-primary.h-100
          .card-header.bg-primary.text-white
            h5.card-title.mb-0
              i.bi.bi-bootstrap.me-2
              | Use Bootstrap When:
          .card-body
            ul.mb-0
              li.mb-2 Rapid prototyping with established patterns
              li.mb-2 Team has limited CSS experience
              li.mb-2 Consistent design system isn't a priority
              li.mb-0 Quick delivery is more important than uniqueness
      .col-lg-6
        .card.border-info.h-100
          .card-header.bg-info.text-white
            h5.card-title.mb-0
              i.bi.bi-wind.me-2
              | Use Tailwind When:
          .card-body
            ul.mb-0
              li.mb-2 Custom design system is required
              li.mb-2 Performance optimization is crucial
              li.mb-2 Team has strong CSS fundamentals
              li.mb-0 Long-term maintainability matters

    p.mb-4
      | For the WebSpark portfolio, I'm adopting a hybrid approach. New projects will start with Tailwind, while existing Bootstrap projects will continue with their current framework unless a redesign is warranted.

  // Deployment Section
  section#deployment.mb-5
    h2.h3.text-primary.mb-4
      i.bi.bi-cloud-upload.me-2
      | Deployment and CI/CD
    p.lead.mb-4
      | TailwindSpark is deployed to GitHub Pages with automatic builds via GitHub Actions, demonstrating real-world production deployment.

    .card.mb-4.shadow-sm
      .card-header.bg-secondary.text-white
        h5.card-title.mb-0
          i.bi.bi-gear.me-2
          | Build Pipeline Process
      .card-body
        ol.mb-3
          li.mb-2
            strong Design Tokens Build:
            | Compile shared design system and Tailwind configuration
          li.mb-2
            strong UI Components Build:
            | Bundle reusable React components with TypeScript definitions
          li.mb-2
            strong Demo Application Build:
            | Create optimized production bundle with CSS purging
          li.mb-0
            strong GitHub Pages Deployment:
            | Automatic deployment on every push to main branch

    p.mb-4
      | This real-world deployment scenario helped me understand how Tailwind works in production environments, including challenges around module resolution and build optimization.

  // Conclusion Section
  section#conclusion.mb-5
    .container
      .row
        .col-lg-8.mx-auto
          .card.border-primary.shadow-sm
            .card-header.bg-primary.text-white
              h2.h3.mb-0
                i.bi.bi-trophy.me-2
                | Conclusion: Evolution, Not Revolution
            .card-body
              p.lead.mb-4
                | TailwindSpark represents evolution, not revolution, in my development approach. Future WebSpark projects will likely use Tailwind for greenfield development, while maintaining Bootstrap for existing applications.

              p.mb-4
                | More importantly, TailwindSpark demonstrates my core philosophy: technology should serve business objectives, not drive them. Whether using Bootstrap's components or Tailwind's utilities, the goal remains the same - building applications that solve real problems for real people.

              .alert.alert-success.border-0.shadow-sm.mb-4
                .d-flex.align-items-start
                  i.bi.bi-star-fill.text-success.me-3.fs-4
                  div
                    h4.alert-heading.h6.mb-2 Key Takeaway
                    p.mb-0
                      | The Bootstrap vs. Tailwind debate misses the point. Both are tools, and like any tool, their value depends on the problem you're solving. The choice should be driven by project requirements, team capabilities, and long-term maintenance considerations.

              p.mb-4
                | Building TailwindSpark was an investment in understanding where CSS frameworks are heading. While Bootstrap will remain part of my toolkit, Tailwind has earned its place for projects requiring custom design systems and performance optimization.

              .text-center.mb-0
                a.btn.btn-primary.me-3(href="https://markhazleton.github.io/tailwind-demo/" target="_blank" rel="noopener")
                  i.bi.bi-box-arrow-up-right.me-2
                  | Explore TailwindSpark Demo
                a.btn.btn-outline-primary(href="https://github.com/markhazleton/tailwind-demo" target="_blank" rel="noopener")
                  i.bi.bi-github.me-2
                  | View Source Code

          // Technical Implementation Details
          .card.mt-4.border-secondary.shadow-sm
            .card-header.bg-secondary.text-white
              h3.h5.mb-0
                i.bi.bi-code-slash.me-2
                | For Developers: Technical Implementation
            .card-body
              p.mb-3
                | For developers interested in the technical aspects, TailwindSpark showcases:

              .row.g-3
                .col-md-4
                  .card.border-primary.h-100
                    .card-body.text-center
                      i.bi.bi-typescript.display-6.text-primary.mb-2
                      h6.card-title TypeScript Integration
                      p.card-text.small Full type safety with Tailwind utilities and component APIs
                .col-md-4
                  .card.border-success.h-100
                    .card-body.text-center
                      i.bi.bi-phone.display-6.text-success.mb-2
                      h6.card-title Responsive Design
                      p.card-text.small Mobile-first development with Tailwind's responsive utilities
                .col-md-4
                  .card.border-warning.h-100
                    .card-body.text-center
                      i.bi.bi-speedometer2.display-6.text-warning.mb-2
                      h6.card-title Performance
                      p.card-text.small CSS purging and bundle size optimization techniques

              .mt-4.p-3.bg-light.rounded
                h6.mb-2
                  i.bi.bi-info-circle.me-2
                  | Project Statistics
                .row.text-center
                  .col-md-3
                    strong.d-block.text-primary 3
                    small Demo Applications
                  .col-md-3
                    strong.d-block.text-success 50+
                    small UI Components
                  .col-md-3
                    strong.d-block.text-warning &lt;20KB
                    small CSS Bundle Size
                  .col-md-3
                    strong.d-block.text-info 100%
                    small TypeScript Coverage

